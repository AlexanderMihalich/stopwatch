{"version":3,"sources":["components/Buttons.js","App.js","index.js"],"names":["Buttons","timeStart","timeStop","timeReset","timeWait","startActive","className","disabled","onClick","setTimeout","App","useState","time","setTime","start","setStart","setStartActive","useEffect","stopWatch$","Subject","interval","pipe","takeUntil","subscribe","value","next","complete","useCallback","Math","floor","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAgCeA,EA9BC,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAmB5D,OACC,sBAAKC,UAAU,qBAAf,UACC,wBAAQA,UAAU,oBAAoBC,SAAUF,EAAaG,QAASP,EAAtE,mBACA,wBAAQK,UAAU,oBAAoBC,UAAWF,EAAaG,QAASN,EAAvE,kBAEA,wBAAQI,UAAU,oBAAoBC,UAAWF,EAAaG,QAAS,kBAAMC,WAAWL,EAAU,MAAlG,kBACA,wBAAQE,UAAU,oBAAoBC,UAAWF,EAAaG,QAASL,EAAvE,uBC+BYO,EArDH,WAAO,IAAD,EAEOC,mBAAS,GAFhB,mBAEVC,EAFU,KAEJC,EAFI,OAGSF,oBAAS,GAHlB,mBAGVG,EAHU,KAGHC,EAHG,OAIqBJ,oBAAS,GAJ9B,mBAIVN,EAJU,KAIGW,EAJH,KAMjBC,qBAAU,WACT,IAAMC,EAAa,IAAIC,IAQvB,OAPAC,YAAS,IACPC,KAAKC,YAAUJ,IACfK,WAAU,YACI,IAAVT,GACHD,GAAQ,SAAAW,GAAK,OAAIA,EAAQ,SAGrB,WACNN,EAAWO,OACXP,EAAWQ,cAEV,CAACZ,IAEJ,IAAMb,EAAY0B,uBAAY,WAC7BZ,GAAS,GACTC,GAAe,KACb,IAEGd,EAAWyB,uBAAY,WAC5BZ,GAAS,GACTC,GAAe,GACfH,EAAQ,KACN,IAEGV,EAAYwB,uBAAY,WAC7Bd,EAAQ,KACN,IAEGT,EAAWuB,uBAAY,WAC5BZ,GAAS,GACTC,GAAe,KACb,IAEH,OACC,sBAAKV,UAAU,uBAAf,UACC,qBAAIA,UAAU,mBAAd,UACC,sBAAMA,UAAU,mBAAhB,UAAqC,IAAMsB,KAAKC,MAAOjB,EAAO,KAAW,KAAKkB,OAAO,KACrF,sBAAMxB,UAAU,mBAAhB,UAAqC,IAAMsB,KAAKC,MAAOjB,EAAO,IAAS,KAAKkB,OAAO,KACnF,sBAAMxB,UAAU,mBAAhB,UAAqC,IAAMsB,KAAKC,MAAOjB,EAAO,IAAQ,KAAKkB,OAAO,QAEnF,cAAC,EAAD,CAAS7B,UAAWA,EAAWC,SAAUA,EAAUC,UAAWA,EAAWC,SAAUA,EAAUC,YAAaA,QC9C7G0B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.671b24bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Buttons = ({ timeStart, timeStop, timeReset, timeWait, startActive }) => {\r\n\r\n\t// ================ detailed timer for the wait button =================\r\n\t// let wasClicked = false;\r\n\t// let timeout;\r\n\t// const doubleClick = () => {\r\n\t// \tif (wasClicked) {\r\n\t// \t\twasClicked = false;\r\n\t// \t\tclearTimeout(timeout);\r\n\t// \t\treturn;\r\n\t// \t}\r\n\t// \twasClicked = true;\r\n\t// \ttimeout = setTimeout(() => {\r\n\t// \t\ttimeWait()\r\n\t// \t\twasClicked = false;\r\n\t// \t}, 300);\r\n\t// }\r\n\t// ================ detailed timer for the wait button =================\r\n\r\n\treturn (\r\n\t\t<div className=\"stopWatch__buttons\">\r\n\t\t\t<button className=\"stopWatch__button\" disabled={startActive} onClick={timeStart}>Start</button>\r\n\t\t\t<button className=\"stopWatch__button\" disabled={!startActive} onClick={timeStop}>Stop</button>\r\n\t\t\t{/* <button className=\"stopWatch__button\" disabled={!startActive} onClick={doubleClick}>Wait</button> */}\r\n\t\t\t<button className=\"stopWatch__button\" disabled={!startActive} onClick={() => setTimeout(timeWait, 300)}>Wait</button>\r\n\t\t\t<button className=\"stopWatch__button\" disabled={!startActive} onClick={timeReset}>Reset</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Buttons","import React, { useEffect, useState, useCallback } from \"react\";\nimport { interval, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport Buttons from \"./components/Buttons\";\n\nconst App = () => {\n\n\tconst [time, setTime] = useState(0);\n\tconst [start, setStart] = useState(false)\n\tconst [startActive, setStartActive] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst stopWatch$ = new Subject();\n\t\tinterval(10)\n\t\t\t.pipe(takeUntil(stopWatch$))\n\t\t\t.subscribe(() => {\n\t\t\t\tif (start === true) {\n\t\t\t\t\tsetTime(value => value + 10);\n\t\t\t\t}\n\t\t\t});\n\t\treturn () => {\n\t\t\tstopWatch$.next();\n\t\t\tstopWatch$.complete();\n\t\t};\n\t}, [start]);\n\n\tconst timeStart = useCallback(() => {\n\t\tsetStart(true);\n\t\tsetStartActive(true)\n\t}, []);\n\n\tconst timeStop = useCallback(() => {\n\t\tsetStart(false);\n\t\tsetStartActive(false)\n\t\tsetTime(0);\n\t}, []);\n\n\tconst timeReset = useCallback(() => {\n\t\tsetTime(0);\n\t}, []);\n\n\tconst timeWait = useCallback(() => {\n\t\tsetStart(false);\n\t\tsetStartActive(false)\n\t}, []);\n\n\treturn (\n\t\t<div className=\"stopWatch _container\">\n\t\t\t<h1 className=\"stopWatch__title\">\n\t\t\t\t<span className=\"stopWatch__value\">{(\"0\" + Math.floor((time / 3600000) % 24)).slice(-2)}</span>\n\t\t\t\t<span className=\"stopWatch__value\">{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}</span>\n\t\t\t\t<span className=\"stopWatch__value\">{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}</span>\n\t\t\t</h1>\n\t\t\t<Buttons timeStart={timeStart} timeStop={timeStop} timeReset={timeReset} timeWait={timeWait} startActive={startActive} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.scss';\nimport './assets/css/null.scss';\nimport './assets/css/fonts.scss';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}